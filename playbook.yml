---
- name: retrieve vars from configuration service
  hosts: localhost
  roles:
    - role: fetch_configs
  tags: fetch_configs

- name: bootstrap a testing infrastructure
  hosts: localhost
  roles:
    - role: terraform
      state: present
      action: initialize
  tags:
    - create_servers
    - terraform

- hosts: all
  tasks:
    - fail:
        msg: "Run this playbook with CentOS 7"
      when: ansible_distribution != 'CentOS' and ansible_distribution_major_version != '7'

- hosts: all
  tasks:
    - name: set Vault URL for all hosts
      set_fact:
        vault_url: "{{ hostvars['localhost']['vault_url'].stdout }}"
  tags: fetch_configs

- hosts: common
  become: true
  roles:
    - role: common
    - role: vault
    - role: dns
    - role: geerlingguy.docker
      docker_users:
        - '{{ ansible_user }}'
    - role: tls
    - role: geerlingguy.apache
    - role: letsencrypt

- hosts: vpn_server
  become: true
  roles: 
    - role: vpn
      type: server
      conf_template: "{{ hostvars['localhost']['openvpn_server_conf_template'] }}"

- hosts: docker_host
  become: true
  roles:
    - role: vpn
      type: client
      conf_template: "{{ hostvars['localhost']['openvpn_client_conf_template'] }}"
      server_ip: "{% for host in groups['vpn_server'] %}
                  {{ hostvars[host]['vpn_public_ip']['content'] }}
                  {% endfor %}"
    - role: ssh

- hosts: openmrs_cd_host
  become: true
  roles:
    - role: vpn
      type: client
      conf_template: "{{ hostvars['localhost']['openvpn_client_conf_template'] }}"
      server_ip: "{{ hostvars['vpn_server']['vpn_public_ip'] }}"
    - role: geerlingguy.pip
    - role: geerlingguy.nodejs
    - role: openmrs_cd
      nexus_repo_id: "{{ hostvars['localhost']['nexus_repo_id'].stdout }}"
      nexus_url: "{{ hostvars['localhost']['nexus_url'].stdout }}"
    - role: ssh

- name: flush the testing infrastructure
  hosts: localhost
  roles:
    - role: terraform
      state: absent
      action: destroy
  tags:
    - destroy_servers
    - terraform